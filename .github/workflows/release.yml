name: Release

on:
  push:
    branches:
      - main  # Trigger on pushes to main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      # 3. Setup pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      # 4. Cache pnpm store
      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # 5. Install dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # # 6. Create versions if Changesets exist
      # - name: Version bump via Changesets
      #   run: pnpm exec changeset version

      # 7. Commit version bump & create tag
      - name: Commit version bump and tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore: version bump [skip ci]" || echo "No changes to commit"
          git tag -a "v$(node -p "require('./package.json').version")" -m "Release version $(node -p "require('./package.json').version")" || echo "Tag already exists"
          git push origin main --tags

      # 8. Build package
      - name: Build package
        run: pnpm run build

      # 9. Publish to npm
      - name: Publish to npm
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
